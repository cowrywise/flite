version: '4'

services:
  postgres:
    build:
      context: .
      dockerfile: ./Dockerfile-Postgres
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: flite
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
  django:
    restart: always
    environment:
      - DJANGO_SECRET_KEY=local
    image: django
    container_name: django
    platform: linux/arm64/v8
    build: ./
    command: >
      bash -c "python wait_for_postgres.py &&
               ./manage.py migrate &&
               ./manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./:/code
    ports:
      - "8000:8000"
    depends_on:
      - postgres
  celery-worker:
    build: .
    command: celery -A flite worker -l info  # Specify the Celery application here
    environment:
      - DJANGO_SETTINGS_MODULE=flite.config  # Replace "myproject" with your project name
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/  # RabbitMQ connection details
    volumes:
      - ./:/code
    depends_on:
      - django
      - rabbitmq
  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    restart: unless-stopped
    volumes:
      - ./data:/data
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
  flower:
    image: mher/flower
    command: celery flower
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    depends_on:
      - rabbitmq
    restart: always